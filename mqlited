import com.ibm.mqlight.api.Client;
import com.ibm.mqlight.api.ClientOptions;
import com.ibm.mqlight.api.ClientException;
import com.ibm.mqlight.api.Callback;
import com.ibm.mqlight.api.Delivery;
import com.ibm.mqlight.api.NonBlockingClient;
import com.ibm.mqlight.api.QoS;
import com.ibm.mqlight.api.SendOptions;

import java.nio.charset.StandardCharsets;

public class MQLiteSender {
    public static void main(String[] args) {
        String amqpUrl = "amqp://your_broker_url:port";
        String queueName = "your_queue_name";
        String messageContent = "Hello, AMQP!";

        // Configure the client
        ClientOptions options = ClientOptions.builder()
                .setService(amqpUrl)
                .build();

        NonBlockingClient.create(options, new Callback<Client>() {
            @Override
            public void onSuccess(Client client) {
                try {
                    // Send the message
                    SendOptions sendOptions = SendOptions.builder()
                            .setQos(QoS.AT_LEAST_ONCE) // Ensuring message delivery
                            .build();

                    client.send(queueName, messageContent.getBytes(StandardCharsets.UTF_8), sendOptions, new Callback<Void>() {
                        @Override
                        public void onSuccess(Void v) {
                            System.out.println("Message sent successfully!");
                            client.stop(new Callback<Void>() {
                                @Override
                                public void onSuccess(Void v) {
                                    System.out.println("Client stopped.");
                                }

                                @Override
                                public void onFailure(ClientException e) {
                                    e.printStackTrace();
                                }
                            });
                        }

                        @Override
                        public void onFailure(ClientException e) {
                            System.out.println("Message failed to send: " + e.getMessage());
                        }
                    });
                } catch (ClientException e) {
                    e.printStackTrace();
                }
            }

            @Override
            public void onFailure(ClientException e) {
                System.out.println("Client failed to connect: " + e.getMessage());
            }
        });
    }
}

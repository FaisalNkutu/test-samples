package ca.medis.web.util.amqp;

import com.ibm.mqlight.api.ClientOptions;
import com.ibm.mqlight.api.Delivery;
import com.ibm.mqlight.api.DestinationAdapter;
import com.ibm.mqlight.api.NonBlockingClient;
import com.ibm.mqlight.api.NonBlockingClientAdapter;
import com.ibm.mqlight.api.StringDelivery;
import org.apache.log4j.Logger;

public class Consumer {

    private static Logger logger = Logger.getLogger(Consumer.class.getName());

    private NonBlockingClient client;

    public Consumer(String host, String userName, String password, String topic) {
        ClientOptions clientOpts = ClientOptions.builder()
                .setCredentials(userName, password)
                .build();

        client = NonBlockingClient.create(host, clientOpts, new NonBlockingClientAdapter<Void>() {
            public void onStarted(NonBlockingClient client, Void context) {
                logger.info("Consumer connected to host: " + host);
                subscribeToTopic(client, topic);
            }
        }, null);
    }

    private void subscribeToTopic(NonBlockingClient client, String topic) {
        client.subscribe(topic, new DestinationAdapter<Void>() {
            public void onMessage(NonBlockingClient client, Void context, Delivery delivery) {
                if (delivery.getType() == Delivery.Type.STRING) {
                    logger.info("Consumed message: " + ((StringDelivery) delivery).getData());
                }
            }
        }, null, null);
    }

    public void close() {
        client.stop(null, (client, context) -> {
            logger.info("Consumer connection closed.");
        });
    }
}

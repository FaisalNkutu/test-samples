
Certainly! Here's the refined version with "KISS" replaced by "CIS":

Context:

Wealth policy administration involved multiple admin systems, including A8 Wealth Policy Admin Systems for annuities.
The decision was made to consolidate these admin systems into a single platform using Unitrax.
The consolidation aimed for business benefits such as ease of operation.
The integration between different admin systems and the central system (CIS) involved data exchange and synchronization.
Migration Process:

Phases of Migration:

Divided into five phases.
Each phase involved migrating one or two admin systems into the Unitrax platform.
Data from the migrated systems flowed into CIS.
Data Flow:

Batch and online processes were utilized for data retrieval and migration.
Data from old admin systems (GIS Cap and Provantage) moved to Unitrax.
Extracts (delta and das) were used for migration into CIS.
Ongoing Integration:

Post-migration, extracts were generated for new contracts and businesses entering the system.
Unitrax utilized a publish-subscribe model to notify CIS of events related to various business processes.
Event Types:

Key events included party maintenance, address changes, adding client contracts, changing relationships, and contract basics.
CIS replicated events such as party replicate and party replicate contract address.
Data Normalization:

Address data was normalized through nightly batch processes for consistency.
Challenges included real-time updates due to scrubbing processes, especially for complex addresses.
Technology and Vendor:

Unitrax was a vendor platform running on ES-44 hundred.
It had a GUI built on top of it.
Challenges and Future Improvements:

Real-Time Address Scrubbing:

Address scrubbing processes were not real-time, causing synchronization challenges.
A solution was being worked on to make address updates more immediate.
Reconciliation and Retry Mechanisms:

A need for Kafka event streaming was mentioned to handle retries and reconciliation for failed transactions.
This would enhance the system's ability to retrigger events when needed.

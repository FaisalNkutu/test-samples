import com.ibm.mqlight.api.ClientOptions;
import com.ibm.mqlight.api.NonBlockingClient;
import com.ibm.mqlight.api.SendOptions;
import com.ibm.mqlight.api.callback.Callback;
import com.ibm.mqlight.api.ClientException;

public class MqLightSenderQueue {
    public static void main(String[] args) {
        String service = "amqp://<your-broker-host>:<port>";  // AMQP service address
        final String queueName = "your-queue";                // Queue name

        try {
            ClientOptions options = ClientOptions.builder().setId("queue-sender-client").build();

            NonBlockingClient.create(service, options, new Callback<Void>() {
                @Override
                public void onSuccess(NonBlockingClient client, Void context) {
                    System.out.println("Client connected. Sending message to queue...");

                    String message = "Hello from MQ Light (Queue)!";
                    SendOptions sendOptions = SendOptions.builder().setQos(0).build();

                    client.send(queueName, message, sendOptions, new Callback<Void>() {
                        @Override
                        public void onSuccess(NonBlockingClient client, Void context) {
                            System.out.println("Message sent successfully to queue.");
                        }

                        @Override
                        public void onError(NonBlockingClient client, Exception exception, Void context) {
                            System.err.println("Error sending message to queue: " + exception.getMessage());
                        }
                    }, null);
                }

                @Override
                public void onError(NonBlockingClient client, Exception exception, Void context) {
                    System.err.println("Client connection failed: " + exception.getMessage());
                }
            });
        } catch (ClientException ex) {
            ex.printStackTrace();
        }
    }
}


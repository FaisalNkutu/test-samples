import com.ibm.mqlight.api.Delivery;
import com.ibm.mqlight.api.DestinationAdapter;
import com.ibm.mqlight.api.NonBlockingClient;
import com.ibm.mqlight.api.StringDelivery;
import com.ibm.mqlight.api.ReceiveOptions;
import java.util.logging.Level;
import java.util.logging.Logger;

public class AMQPPooledReceiver extends AMQPConnectionPoolBase {

    private static final Logger logger = Logger.getLogger(AMQPPooledReceiver.class.getName());

    public AMQPPooledReceiver(String connectionUrl, String username, String password) {
        super(connectionUrl, username, password);
    }

    @Override
    protected void performClientOperation(NonBlockingClient client) {
        try {
            logger.log(Level.INFO, "Attempting to subscribe to topic 'myTopic'");
            client.subscribe("myTopic", new DestinationAdapter<Void>() {
                @Override
                public void onMessage(NonBlockingClient client, Void context, Delivery delivery) {
                    logger.log(Level.INFO, "Message received");
                    if (delivery.getType() == Delivery.Type.STRING) {
                        String message = ((StringDelivery) delivery).getData();
                        logger.log(Level.INFO, "Received: " + message);
                        System.out.println("Received: " + message);
                    }
                }

                @Override
                public void onStarted(NonBlockingClient client, Void context) {
                    logger.log(Level.INFO, "Subscription started on topic 'myTopic'");
                }

                @Override
                public void onError(NonBlockingClient client, Void context, Exception exception) {
                    logger.log(Level.SEVERE, "Error during message reception: " + exception.getMessage(), exception);
                }

            }, new ReceiveOptions.Builder().build(), null);

        } catch (Exception e) {
            logger.log(Level.SEVERE, "Error subscribing to topic", e);
        }
    }

    public static void main(String[] args) {
        AMQPPooledReceiver receiver = new AMQPPooledReceiver("amqp://localhost", "userName", "password");
        receiver.start();
    }
}
